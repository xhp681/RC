@model QueuedEmailModel

@{
    //page title
    ViewBag.PageTitle = T("Admin.System.QueuedEmails.EditQueuedEmailDetails").Text;
    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("Queued emails");
}

<form asp-controller="QueuedEmail" asp-action="Edit" method="post">
    <div class="content-header clearfix">
        <h1 class="pull-left">
            @T("Admin.System.QueuedEmails.EditQueuedEmailDetails")
            <small>
                <i class="fa fa-arrow-circle-left"></i>
                <a asp-action="List">@T("Admin.System.QueuedEmails.BackToList")</a>
            </small>
        </h1>
        <div class="pull-right">
            <button type="submit" name="requeue" class="btn btn-success">
                <i class="fa fa-clone"></i>
                @T("Admin.System.QueuedEmails.Requeue")
            </button>
            <button type="submit" name="save" class="btn btn-primary">
                <i class="fa fa-floppy-o"></i>
                @T("Admin.Common.Save")
            </button>
            <button type="submit" name="save-continue" class="btn btn-primary">
                <i class="fa fa-floppy-o"></i>
                @T("Admin.Common.SaveContinue")
            </button>
            <span id="queuedEmail-delete" class="btn btn-danger">
                <i class="fa fa-trash-o"></i>
                @T("Admin.Common.Delete")
            </span>
            @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.QueuedEmailDetailsButtons, additionalData = Model })
        </div>
    </div>
    @await Html.PartialAsync("_CreateOrUpdate", Model)
</form>
<nop-delete-confirmation asp-model-id="@Model.Id" asp-button-id="queuedEmail-delete" />
